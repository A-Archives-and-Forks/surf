name: Mac Only Build & Release On PR Label

on:
  pull_request:
    types: [labeled]
    branches:
      - main
      - dev

jobs:
  prepare:
    if: ${{ github.event.label.name == 'mac-build' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}-mac
    steps:
      - uses: actions/checkout@v3
      - name: Get next version
        id: version
        uses: reecetech/version-increment@2023.9.3
        with:
          scheme: semver
          increment: patch

  build:
    if: ${{ github.event.label.name == 'mac-build' }}
    needs: prepare
    strategy:
      matrix:
        include:
          - architecture: arm
            os: macos-14
          - architecture: x64
            os: macos-latest # this is macos-12 rn
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Homebrew dependencies
        run: |
          brew update
          brew install python@3.12 || true # brew link fails, so ignore the error
          brew link --overwrite python@3.12
          brew install jq
          brew install libomp
          brew install tesseract
          brew install leptonica
          brew install pkg-config
      - name: Install dependencies
        run: |
          echo "installing horizon & external deps"
          yarn workspace horizon install --frozen-lockfile
          ls -la apps/desktop/external-deps/libtorch
          ls -la apps/desktop/external-deps/libtorch/lib
          ls -la apps/desktop/external-deps/libtorch/include
          echo "installing tela"
          yarn workspace @horizon/tela install
          yarn workspace @horizon/tela build
          echo "installing cmdk"
          yarn workspace @horizon/cmdk-sv install
          yarn workspace @horizon/cmdk-sv build
          echo "installing rest of the project's deps"
          yarn install --frozen-lockfile
      - name: Build for ${{ matrix.architecture }}
        run: |
          if [ "${{ matrix.architecture }}" == "arm" ]; then
            yarn build:horizon:mac:arm
          else
            yarn build:horizon:mac:x64
          fi
        env:
          APP_VERSION: ${{ needs.prepare.outputs.version }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          RELEASE_CHANNEL: ${{ github.head_ref }}
          BUILD_TAG: ${{ github.head_ref }}
          BUILD_RESOURCES_DIR: build/resources/dev
          M_VITE_APP_VERSION: ${{ needs.prepare.outputs.version }}
          R_VITE_APP_VERSION: ${{ needs.prepare.outputs.version }}
          M_VITE_BUILD_TAG: ${{ github.head_ref }}
          R_VITE_BUILD_TAG: ${{ github.head_ref }}
          HUSKY: 0
          PRODUCT_NAME: Horizon
          SHOULD_NOTARIZE: false
          M_VITE_USE_TMP_DATA_DIR: true
      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.architecture }}
          path: |
            apps/desktop/dist/*.dmg
            apps/desktop/dist/*.blockmap

  create-release:
    if: ${{ github.event.label.name == 'mac-build' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: build/
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: true
          tag_name: v${{ needs.prepare.outputs.version }}
          files: |
            build/**/*.dmg
            build/**/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Pull Request with Release URL
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Release is available [here](https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/v${{ needs.prepare.outputs.version }}).`
            })

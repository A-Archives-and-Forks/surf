name: Release the Horizon Desktop App

on:
  workflow_dispatch:
    inputs:
      increment_type:
        description: 'Version increment type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_version.outputs.new_version }}
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create version bump branch
        run: |
          git checkout -b version-bump-${{ github.run_id }}

      - name: Increment desktop app version
        id: set_version
        run: |
          cd apps/desktop
          npm version ${{ github.event.inputs.increment_type }} --no-git-tag-version
          echo "NEW_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Push version commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add apps/desktop/package.json
          git commit -m "chore: bump desktop version to ${{ env.NEW_VERSION }}"
          git push origin HEAD:version-bump-${{ github.run_id }}

  build:
    needs: prepare
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build Desktop App (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:desktop:mac

      - name: Build Desktop App (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:desktop:win

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          tag_name: v${{ needs.prepare.outputs.new_version }}
          name: Horizon Desktop App v${{ needs.prepare.outputs.new_version }}
          files: |
            apps/desktop/dist/*.exe
            apps/desktop/dist/*.zip
            apps/desktop/dist/*.dmg
            apps/desktop/dist/*.AppImage
            apps/desktop/dist/*.snap
            apps/desktop/dist/*.deb
            apps/desktop/dist/*.rpm
            apps/desktop/dist/*.tar.gz
            apps/desktop/dist/*.yml
            apps/desktop/dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_pr:
    if: ${{ needs.release.result == 'success' }}
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: version-bump-${{ github.run_id }}
          destination_branch: main
          pr_title: "Bump desktop version to ${{ needs.prepare.outputs.new_version }}"
          pr_body: "This is an automated version bump generated by GitHub Actions."
          pr_label: "automerge"
          pr_allow_empty: false

  cleanup:
    if: ${{ needs.release.result != 'success' }}
    needs: [prepare, release]
    runs-on: ubuntu-latest
    steps:
      - name: Delete version bump branch
        uses: actions/github-script@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/version-bump-${{ github.run_id }}'
            })

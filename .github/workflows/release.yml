name: Build/Release the spaceOS app

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest #${{ matrix.os }}

    outputs:
      release-id: ${{ steps.release.outputs.id }}

    #strategy:
     # matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
      #  os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      # - name: build-linux
      #   if: matrix.os == 'ubuntu-latest'
      #   run: npm run build:linux

      - name: Build Mac App
        if: matrix.os == 'macos-latest'
        run: npm run build:desktop:mac

      #- name: Build Win App
      #  if: matrix.os == 'windows-latest'
      #  run: npm run build:desktop:win

      - id: release
        name: Upload assets to release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            apps/desktop/dist/*.exe
            apps/desktop/dist/*.zip
            apps/desktop/dist/*.dmg
            apps/desktop/dist/*.AppImage
            apps/desktop/dist/*.snap
            apps/desktop/dist/*.deb
            apps/desktop/dist/*.rpm
            apps/desktop/dist/*.tar.gz
            apps/desktop/dist/*.yml
            apps/desktop/dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Get next version
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
          scheme: semver
          increment: patch
  
      - name: Publish release
        uses: actions/github-script@v6
        env:
          RELEASE_ID: ${{ needs.build.outputs.release-id }}
          VERSION: ${{ steps.version.outputs.version }}

        with:
          script: |
            const { RELEASE_ID, VERSION } = process.env
            
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: `${RELEASE_ID}`,
              draft: false,
              tag_name: `v${VERSION}`,
              name: `v${VERSION}`
            })  

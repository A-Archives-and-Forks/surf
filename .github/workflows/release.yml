name: Release the Horizon Desktop app

on:
  workflow_dispatch:
    inputs:
      increment_type:
        description: 'Version increment type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  prepare:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Get next version
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
          scheme: semver
          increment: ${{ github.event.inputs.increment_type }}

  build:
    needs: prepare
    runs-on: macos-latest
    # runs-on: ${{ matrix.os }}

    # strategy:
    #   matrix:
    #     os: [macos-latest, windows-latest]

    outputs:
      release-id: ${{ steps.release.outputs.id }}
      version: ${{ needs.prepare.outputs.version }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set version as env variable
        run: echo "APP_VERSION=${{ needs.prepare.outputs.version }}" >> $GITHUB_ENV

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build on Mac
        # if: matrix.os == 'macos-latest'
        run: npm run build:desktop:mac
        env:
          APP_VERSION: ${{ env.APP_VERSION }}

      - name: Build on Windows
        # if: matrix.os == 'windows-latest'
        run: npm run build:desktop:win
        env:
          APP_VERSION: ${{ env.APP_VERSION }}

      - id: release
        name: Upload assets to release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            apps/desktop/dist/*.exe
            apps/desktop/dist/*.zip
            apps/desktop/dist/*.dmg
            apps/desktop/dist/*.AppImage
            apps/desktop/dist/*.snap
            apps/desktop/dist/*.deb
            apps/desktop/dist/*.rpm
            apps/desktop/dist/*.tar.gz
            apps/desktop/dist/*.yml
            apps/desktop/dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Publish release
        uses: actions/github-script@v6
        env:
          RELEASE_ID: ${{ needs.build.outputs.release-id }}
          VERSION: ${{ needs.build.outputs.version }}
        with:
          script: |
            const { RELEASE_ID, VERSION } = process.env
            
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: RELEASE_ID,
              draft: false,
              tag_name: `v${VERSION}`,
              name: `v${VERSION}`
            })

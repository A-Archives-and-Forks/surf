diff --git a/node_modules/electron-chrome-web-store/dist/cjs/browser/index.js b/node_modules/electron-chrome-web-store/dist/cjs/browser/index.js
index 5760fb1..f27ce15 100644
--- a/node_modules/electron-chrome-web-store/dist/cjs/browser/index.js
+++ b/node_modules/electron-chrome-web-store/dist/cjs/browser/index.js
@@ -1577,7 +1577,7 @@ async function initUpdater(state) {
 async function installChromeWebStore(opts = {}) {
   const session = opts.session || import_electron5.session.defaultSession;
   const extensionsPath = opts.extensionsPath || getDefaultExtensionsPath();
-  const modulePath = opts.modulePath || __dirname;
+  //const modulePath = opts.modulePath || __dirname;
   const loadExtensions = typeof opts.loadExtensions === "boolean" ? opts.loadExtensions : true;
   const allowUnpackedExtensions = typeof opts.allowUnpackedExtensions === "boolean" ? opts.allowUnpackedExtensions : false;
   const autoUpdate = typeof opts.autoUpdate === "boolean" ? opts.autoUpdate : true;
@@ -1592,6 +1592,7 @@ async function installChromeWebStore(opts = {}) {
     minimumManifestVersion,
     beforeInstall
   };
+  /*
   const preloadPath = path6.join(modulePath, "dist/renderer/web-store-preload.js");
   if ("registerPreloadScript" in session) {
     session.registerPreloadScript({
@@ -1602,6 +1603,7 @@ async function installChromeWebStore(opts = {}) {
   } else {
     session.setPreloads([...session.getPreloads(), preloadPath]);
   }
+  */
   registerWebStoreApi(webStoreState);
   await import_electron5.app.whenReady();
   if (loadExtensions) {
diff --git a/node_modules/electron-chrome-web-store/dist/esm/browser/index.mjs b/node_modules/electron-chrome-web-store/dist/esm/browser/index.mjs
index 3727562..a5690c6 100644
--- a/node_modules/electron-chrome-web-store/dist/esm/browser/index.mjs
+++ b/node_modules/electron-chrome-web-store/dist/esm/browser/index.mjs
@@ -855,7 +855,7 @@ async function initUpdater(state) {
 async function installChromeWebStore(opts = {}) {
   const session = opts.session || electronSession3.defaultSession;
   const extensionsPath = opts.extensionsPath || getDefaultExtensionsPath();
-  const modulePath = opts.modulePath || __dirname;
+  //const modulePath = opts.modulePath || __dirname;
   const loadExtensions = typeof opts.loadExtensions === "boolean" ? opts.loadExtensions : true;
   const allowUnpackedExtensions = typeof opts.allowUnpackedExtensions === "boolean" ? opts.allowUnpackedExtensions : false;
   const autoUpdate = typeof opts.autoUpdate === "boolean" ? opts.autoUpdate : true;
@@ -870,6 +870,7 @@ async function installChromeWebStore(opts = {}) {
     minimumManifestVersion,
     beforeInstall
   };
+  /*
   const preloadPath = path6.join(modulePath, "dist/renderer/web-store-preload.js");
   if ("registerPreloadScript" in session) {
     session.registerPreloadScript({
@@ -880,6 +881,7 @@ async function installChromeWebStore(opts = {}) {
   } else {
     session.setPreloads([...session.getPreloads(), preloadPath]);
   }
+  */
   registerWebStoreApi(webStoreState);
   await app4.whenReady();
   if (loadExtensions) {
